// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  password  String
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  carts     Cart[]
}

model Product {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String?
  price       Float
  imageUrl    String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  cartItems   CartItem[]
  categories  ProductCategory[]
}

model Category {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  products  ProductCategory[]
}

model ProductCategory {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  productId  String    @db.ObjectId
  categoryId String    @db.ObjectId
  product    Product   @relation(fields: [productId], references: [id])
  category   Category  @relation(fields: [categoryId], references: [id])
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Cart {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  userId    String    @db.ObjectId
  user      User      @relation(fields: [userId], references: [id])
  cartItems CartItem[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model CartItem {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  quantity  Int      @default(1)
  productId String   @db.ObjectId
  product   Product  @relation(fields: [productId], references: [id])
  cartId    String   @db.ObjectId
  cart      Cart     @relation(fields: [cartId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
